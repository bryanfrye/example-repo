---
# Managed by repo-deploy

name: Deploy Infrastructure

'on':
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read requested linters
        id: read-linters
        run: |
          if [[ -f .linters ]]; then
            LINTERS=\$(cat .linters | tr '\n' ',')
          else
            LINTERS="none"
          fi
          echo "LINTERS=\$LINTERS" >> \$GITHUB_ENV

      - name: Install requested linters
        run: |
          for linter in $LINTERS; do
            case "$linter" in
              yaml)
                pip install yamllint
                ;;
              cloudformation)
                pip install cfn-lint
                ;;
              shell)
                sudo apt-get update && sudo apt-get install -y shellcheck
                ;;
              ansible)
                pip install ansible-lint
                ;;
              terraform)
                sudo apt-get install -y terraform
                ;;
              puppet)
                gem install puppet-lint
                ;;
              ruby)
                gem install rubocop
                ;;
              python)
                pip install pylint
                ;;
              markdown)
                npm install -g markdownlint-cli
                ;;
            esac
          done

      - name: Run selected linters
        run: |
          echo "Running linters: $LINTERS"
          ./scripts/run_linters.sh

  deploy:
    name: Deploy to $PROVIDER
    runs-on: ubuntu-latest
    environment: production
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure Credentials
        run: echo "Configure credentials for $PROVIDER (stub)"

      - name: Deploy
        run: |
          git clone https://github.com/bryanfrye/repo-deploy.git
          ./repo-deploy/scripts/deploy_stacks.sh
